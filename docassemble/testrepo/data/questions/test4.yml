# A change made in the prototype-mferrare branch
---
# Store the following in separate DALists
# - answers to the questions asked
# - answers to sub-questios asked (if any)
# - an eligibility true/false for each question
objects:
  - answers: DAList.using(there_are_any=True)
  - subanswers: DAList
  - eligibility: DAList
---
variable name: questions
data:
  - qn_text: 'I experience shortness of breath, tiredness and/or chest pain when active, making me unable to:'
    qn_list:
      - Walk or use a wheelchair around a shopping centre without assistance.
      - Walk or use a wheelchair from the car park to a shopping centre without assistance.
      - Use public transport without assistance.
      - Perform household activities eg. folding and putting away washing, or gardening.
    qn_minselect: 1
    qn_subquestion: 'Do you find it difficult to perform clerical, seated or stationary work activities for at least 3 hours at a time?'
  - qn_text: 'I have difficulty when performing activities while using my hands and arms causing me to:'
    qn_list:
      - Limited movement or coordination in both arms or hands, or I have a hand or arm amputation.
      - Severe difficulty handling, moving or carrying most objects, even when wearing an assistive device that I normally use.
      - Difficulty using a computer keyboard despite appropriate adaptions to it.
      - Severe difficulty using a pen or pencil.
      - Severe difficulty turning the pages of a book without assistance.
    qn_minselect: 4
    qn_subquestion: 'NA'
  - qn_text: 'Test question 3'
    qn_list:
      - First Item
      - Second Item
      - Third Item
      - Fourth Item
    qn_minselect: 1
    qn_subquestion: 'We are missing the second subquestion'
---
question: |
  ${ str(i + 1) + ". " + questions[i]['qn_text'] }
fields:
  - no label: answers[i]
    datatype: checkboxes
    code: questions[i]['qn_list']
---
question: |
  ${ questions[i]['qn_subquestion'] }
yesno: subanswers[i]
---
code: |
  answers.there_is_another = answers.number_gathered() < len(questions)
---
# Eligibility processing goes here.
# First we check if we have answered enough questions to
# meet the minimum selection criteria.  If we haven't then
# we set the eligibility list item to false.  Otherwise, we
# check for a subquestion.  If the subquestion exists then
# we ask it.  The subquestion must be true in order for 
# eligibility to be true
code: |
  if ( len(answers[i].true_values()) < questions[i]['qn_minselect'] ):
    eligibility[i] = False
  elif ( questions[i]['qn_subquestion'] != 'NA' ):
    eligibility[i] = subanswers[i]
  else:
    eligibility[i] = False
---
mandatory: True
question: |
  Answers
subquestion: |
  The answers are:

  Question|Answers|Minselect|Subquestion|Eligible
  --------|-------|---------|-----------|--------
  % for index in range(len(questions)):
  ${ questions[index]['qn_text'] } | ${ answers[index].true_values() } | ${ questions[index]['qn_minselect'] } | ${ questions[index]['qn_subquestion'] } | ${ eligibility[index] }
  % endfor
---